use ethers::core::types::U256;
use serde::{Deserialize, Serialize};
use std::fmt::{Display, Formatter, Result as FmtResult};

#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, Serialize, Deserialize)]
pub enum SchemaType {
    // Unsigned Integers
    Uint8,
    Uint16,
    Uint24,
    Uint32,
    Uint40,
    Uint48,
    Uint56,
    Uint64,
    Uint72,
    Uint80,
    Uint88,
    Uint96,
    Uint104,
    Uint112,
    Uint120,
    Uint128,
    Uint136,
    Uint144,
    Uint152,
    Uint160,
    Uint168,
    Uint176,
    Uint184,
    Uint192,
    Uint200,
    Uint208,
    Uint216,
    Uint224,
    Uint232,
    Uint240,
    Uint248,
    Uint256,
    // Signed Integers
    Int8,
    Int16,
    Int24,
    Int32,
    Int40,
    Int48,
    Int56,
    Int64,
    Int72,
    Int80,
    Int88,
    Int96,
    Int104,
    Int112,
    Int120,
    Int128,
    Int136,
    Int144,
    Int152,
    Int160,
    Int168,
    Int176,
    Int184,
    Int192,
    Int200,
    Int208,
    Int216,
    Int224,
    Int232,
    Int240,
    Int248,
    Int256,
    // Bytes
    Bytes1,
    Bytes2,
    Bytes3,
    Bytes4,
    Bytes5,
    Bytes6,
    Bytes7,
    Bytes8,
    Bytes9,
    Bytes10,
    Bytes11,
    Bytes12,
    Bytes13,
    Bytes14,
    Bytes15,
    Bytes16,
    Bytes17,
    Bytes18,
    Bytes19,
    Bytes20,
    Bytes21,
    Bytes22,
    Bytes23,
    Bytes24,
    Bytes25,
    Bytes26,
    Bytes27,
    Bytes28,
    Bytes29,
    Bytes30,
    Bytes31,
    Bytes32,
    // Other Types
    Bool,
    Address,
    // Arrays
    Uint8Array,
    Uint16Array,
    Uint24Array,
    Uint32Array,
    Uint40Array,
    Uint48Array,
    Uint56Array,
    Uint64Array,
    Uint72Array,
    Uint80Array,
    Uint88Array,
    Uint96Array,
    Uint104Array,
    Uint112Array,
    Uint120Array,
    Uint128Array,
    Uint136Array,
    Uint144Array,
    Uint152Array,
    Uint160Array,
    Uint168Array,
    Uint176Array,
    Uint184Array,
    Uint192Array,
    Uint200Array,
    Uint208Array,
    Uint216Array,
    Uint224Array,
    Uint232Array,
    Uint240Array,
    Uint248Array,
    Uint256Array,
    Int8Array,
    Int16Array,
    Int24Array,
    Int32Array,
    Int40Array,
    Int48Array,
    Int56Array,
    Int64Array,
    Int72Array,
    Int80Array,
    Int88Array,
    Int96Array,
    Int104Array,
    Int112Array,
    Int120Array,
    Int128Array,
    Int136Array,
    Int144Array,
    Int152Array,
    Int160Array,
    Int168Array,
    Int176Array,
    Int184Array,
    Int192Array,
    Int200Array,
    Int208Array,
    Int216Array,
    Int224Array,
    Int232Array,
    Int240Array,
    Int248Array,
    Int256Array,
    Bytes1Array,
    Bytes2Array,
    Bytes3Array,
    Bytes4Array,
    Bytes5Array,
    Bytes6Array,
    Bytes7Array,
    Bytes8Array,
    Bytes9Array,
    Bytes10Array,
    Bytes11Array,
    Bytes12Array,
    Bytes13Array,
    Bytes14Array,
    Bytes15Array,
    Bytes16Array,
    Bytes17Array,
    Bytes18Array,
    Bytes19Array,
    Bytes20Array,
    Bytes21Array,
    Bytes22Array,
    Bytes23Array,
    Bytes24Array,
    Bytes25Array,
    Bytes26Array,
    Bytes27Array,
    Bytes28Array,
    Bytes29Array,
    Bytes30Array,
    Bytes31Array,
    Bytes32Array,
    BoolArray,
    AddressArray,
    // Dynamic Types
    Bytes,
    String,
}

impl Display for SchemaType {
    fn fmt(&self, f: &mut Formatter<'_>) -> FmtResult {
        write!(
            f,
            "{}",
            match self {
                // Mappings for each enum variant
                SchemaType::Uint8 => "uint8",
                SchemaType::Uint16 => "uint16",
                SchemaType::Uint24 => "uint24",
                SchemaType::Uint32 => "uint32",
                SchemaType::Uint40 => "uint40",
                SchemaType::Uint48 => "uint48",
                SchemaType::Uint56 => "uint56",
                SchemaType::Uint64 => "uint64",
                SchemaType::Uint72 => "uint72",
                SchemaType::Uint80 => "uint80",
                SchemaType::Uint88 => "uint88",
                SchemaType::Uint96 => "uint96",
                SchemaType::Uint104 => "uint104",
                SchemaType::Uint112 => "uint112",
                SchemaType::Uint120 => "uint120",
                SchemaType::Uint128 => "uint128",
                SchemaType::Uint136 => "uint136",
                SchemaType::Uint144 => "uint144",
                SchemaType::Uint152 => "uint152",
                SchemaType::Uint160 => "uint160",
                SchemaType::Uint168 => "uint168",
                SchemaType::Uint176 => "uint176",
                SchemaType::Uint184 => "uint184",
                SchemaType::Uint192 => "uint192",
                SchemaType::Uint200 => "uint200",
                SchemaType::Uint208 => "uint208",
                SchemaType::Uint216 => "uint216",
                SchemaType::Uint224 => "uint224",
                SchemaType::Uint232 => "uint232",
                SchemaType::Uint240 => "uint240",
                SchemaType::Uint248 => "uint248",
                SchemaType::Uint256 => "uint256",
                SchemaType::Int8 => "int8",
                SchemaType::Int16 => "int16",
                SchemaType::Int24 => "int24",
                SchemaType::Int32 => "int32",
                SchemaType::Int40 => "int40",
                SchemaType::Int48 => "int48",
                SchemaType::Int56 => "int56",
                SchemaType::Int64 => "int64",
                SchemaType::Int72 => "int72",
                SchemaType::Int80 => "int80",
                SchemaType::Int88 => "int88",
                SchemaType::Int96 => "int96",
                SchemaType::Int104 => "int104",
                SchemaType::Int112 => "int112",
                SchemaType::Int120 => "int120",
                SchemaType::Int128 => "int128",
                SchemaType::Int136 => "int136",
                SchemaType::Int144 => "int144",
                SchemaType::Int152 => "int152",
                SchemaType::Int160 => "int160",
                SchemaType::Int168 => "int168",
                SchemaType::Int176 => "int176",
                SchemaType::Int184 => "int184",
                SchemaType::Int192 => "int192",
                SchemaType::Int200 => "int200",
                SchemaType::Int208 => "int208",
                SchemaType::Int216 => "int216",
                SchemaType::Int224 => "int224",
                SchemaType::Int232 => "int232",
                SchemaType::Int240 => "int240",
                SchemaType::Int248 => "int248",
                SchemaType::Int256 => "int256",
                SchemaType::Bytes1 => "bytes1",
                SchemaType::Bytes2 => "bytes2",
                SchemaType::Bytes3 => "bytes3",
                SchemaType::Bytes4 => "bytes4",
                SchemaType::Bytes5 => "bytes5",
                SchemaType::Bytes6 => "bytes6",
                SchemaType::Bytes7 => "bytes7",
                SchemaType::Bytes8 => "bytes8",
                SchemaType::Bytes9 => "bytes9",
                SchemaType::Bytes10 => "bytes10",
                SchemaType::Bytes11 => "bytes11",
                SchemaType::Bytes12 => "bytes12",
                SchemaType::Bytes13 => "bytes13",
                SchemaType::Bytes14 => "bytes14",
                SchemaType::Bytes15 => "bytes15",
                SchemaType::Bytes16 => "bytes16",
                SchemaType::Bytes17 => "bytes17",
                SchemaType::Bytes18 => "bytes18",
                SchemaType::Bytes19 => "bytes19",
                SchemaType::Bytes20 => "bytes20",
                SchemaType::Bytes21 => "bytes21",
                SchemaType::Bytes22 => "bytes22",
                SchemaType::Bytes23 => "bytes23",
                SchemaType::Bytes24 => "bytes24",
                SchemaType::Bytes25 => "bytes25",
                SchemaType::Bytes26 => "bytes26",
                SchemaType::Bytes27 => "bytes27",
                SchemaType::Bytes28 => "bytes28",
                SchemaType::Bytes29 => "bytes29",
                SchemaType::Bytes30 => "bytes30",
                SchemaType::Bytes31 => "bytes31",
                SchemaType::Bytes32 => "bytes32",
                SchemaType::Bool => "bool",
                SchemaType::Address => "address",
                SchemaType::Uint8Array => "uint8[]",
                SchemaType::Uint16Array => "uint16[]",
                SchemaType::Uint24Array => "uint24[]",
                SchemaType::Uint32Array => "uint32[]",
                SchemaType::Uint40Array => "uint40[]",
                SchemaType::Uint48Array => "uint48[]",
                SchemaType::Uint56Array => "uint56[]",
                SchemaType::Uint64Array => "uint64[]",
                SchemaType::Uint72Array => "uint72[]",
                SchemaType::Uint80Array => "uint80[]",
                SchemaType::Uint88Array => "uint88[]",
                SchemaType::Uint96Array => "uint96[]",
                SchemaType::Uint104Array => "uint104[]",
                SchemaType::Uint112Array => "uint112[]",
                SchemaType::Uint120Array => "uint120[]",
                SchemaType::Uint128Array => "uint128[]",
                SchemaType::Uint136Array => "uint136[]",
                SchemaType::Uint144Array => "uint144[]",
                SchemaType::Uint152Array => "uint152[]",
                SchemaType::Uint160Array => "uint160[]",
                SchemaType::Uint168Array => "uint168[]",
                SchemaType::Uint176Array => "uint176[]",
                SchemaType::Uint184Array => "uint184[]",
                SchemaType::Uint192Array => "uint192[]",
                SchemaType::Uint200Array => "uint200[]",
                SchemaType::Uint208Array => "uint208[]",
                SchemaType::Uint216Array => "uint216[]",
                SchemaType::Uint224Array => "uint224[]",
                SchemaType::Uint232Array => "uint232[]",
                SchemaType::Uint240Array => "uint240[]",
                SchemaType::Uint248Array => "uint248[]",
                SchemaType::Uint256Array => "uint256[]",
                SchemaType::Int8Array => "int8[]",
                SchemaType::Int16Array => "int16[]",
                SchemaType::Int24Array => "int24[]",
                SchemaType::Int32Array => "int32[]",
                SchemaType::Int40Array => "int40[]",
                SchemaType::Int48Array => "int48[]",
                SchemaType::Int56Array => "int56[]",
                SchemaType::Int64Array => "int64[]",
                SchemaType::Int72Array => "int72[]",
                SchemaType::Int80Array => "int80[]",
                SchemaType::Int88Array => "int88[]",
                SchemaType::Int96Array => "int96[]",
                SchemaType::Int104Array => "int104[]",
                SchemaType::Int112Array => "int112[]",
                SchemaType::Int120Array => "int120[]",
                SchemaType::Int128Array => "int128[]",
                SchemaType::Int136Array => "int136[]",
                SchemaType::Int144Array => "int144[]",
                SchemaType::Int152Array => "int152[]",
                SchemaType::Int160Array => "int160[]",
                SchemaType::Int168Array => "int168[]",
                SchemaType::Int176Array => "int176[]",
                SchemaType::Int184Array => "int184[]",
                SchemaType::Int192Array => "int192[]",
                SchemaType::Int200Array => "int200[]",
                SchemaType::Int208Array => "int208[]",
                SchemaType::Int216Array => "int216[]",
                SchemaType::Int224Array => "int224[]",
                SchemaType::Int232Array => "int232[]",
                SchemaType::Int240Array => "int240[]",
                SchemaType::Int248Array => "int248[]",
                SchemaType::Int256Array => "int256[]",
                SchemaType::Bytes1Array => "bytes1[]",
                SchemaType::Bytes2Array => "bytes2[]",
                SchemaType::Bytes3Array => "bytes3[]",
                SchemaType::Bytes4Array => "bytes4[]",
                SchemaType::Bytes5Array => "bytes5[]",
                SchemaType::Bytes6Array => "bytes6[]",
                SchemaType::Bytes7Array => "bytes7[]",
                SchemaType::Bytes8Array => "bytes8[]",
                SchemaType::Bytes9Array => "bytes9[]",
                SchemaType::Bytes10Array => "bytes10[]",
                SchemaType::Bytes11Array => "bytes11[]",
                SchemaType::Bytes12Array => "bytes12[]",
                SchemaType::Bytes13Array => "bytes13[]",
                SchemaType::Bytes14Array => "bytes14[]",
                SchemaType::Bytes15Array => "bytes15[]",
                SchemaType::Bytes16Array => "bytes16[]",
                SchemaType::Bytes17Array => "bytes17[]",
                SchemaType::Bytes18Array => "bytes18[]",
                SchemaType::Bytes19Array => "bytes19[]",
                SchemaType::Bytes20Array => "bytes20[]",
                SchemaType::Bytes21Array => "bytes21[]",
                SchemaType::Bytes22Array => "bytes22[]",
                SchemaType::Bytes23Array => "bytes23[]",
                SchemaType::Bytes24Array => "bytes24[]",
                SchemaType::Bytes25Array => "bytes25[]",
                SchemaType::Bytes26Array => "bytes26[]",
                SchemaType::Bytes27Array => "bytes27[]",
                SchemaType::Bytes28Array => "bytes28[]",
                SchemaType::Bytes29Array => "bytes29[]",
                SchemaType::Bytes30Array => "bytes30[]",
                SchemaType::Bytes31Array => "bytes31[]",
                SchemaType::Bytes32Array => "bytes32[]",
                SchemaType::BoolArray => "bool[]",
                SchemaType::AddressArray => "address[]",
                SchemaType::Bytes => "bytes",
                SchemaType::String => "string",
            }
        )
    }
}

const STATIC_ABI_TYPES: &[SchemaType] = &[
    SchemaType::Uint8,
    SchemaType::Uint16,
    SchemaType::Uint24,
    SchemaType::Uint32,
    SchemaType::Uint40,
    SchemaType::Uint48,
    SchemaType::Uint56,
    SchemaType::Uint64,
    SchemaType::Uint72,
    SchemaType::Uint80,
    SchemaType::Uint88,
    SchemaType::Uint96,
    SchemaType::Uint104,
    SchemaType::Uint112,
    SchemaType::Uint120,
    SchemaType::Uint128,
    SchemaType::Uint136,
    SchemaType::Uint144,
    SchemaType::Uint152,
    SchemaType::Uint160,
    SchemaType::Uint168,
    SchemaType::Uint176,
    SchemaType::Uint184,
    SchemaType::Uint192,
    SchemaType::Uint200,
    SchemaType::Uint208,
    SchemaType::Uint216,
    SchemaType::Uint224,
    SchemaType::Uint232,
    SchemaType::Uint240,
    SchemaType::Uint248,
    SchemaType::Uint256,
    SchemaType::Int8,
    SchemaType::Int16,
    SchemaType::Int24,
    SchemaType::Int32,
    SchemaType::Int40,
    SchemaType::Int48,
    SchemaType::Int56,
    SchemaType::Int64,
    SchemaType::Int72,
    SchemaType::Int80,
    SchemaType::Int88,
    SchemaType::Int96,
    SchemaType::Int104,
    SchemaType::Int112,
    SchemaType::Int120,
    SchemaType::Int128,
    SchemaType::Int136,
    SchemaType::Int144,
    SchemaType::Int152,
    SchemaType::Int160,
    SchemaType::Int168,
    SchemaType::Int176,
    SchemaType::Int184,
    SchemaType::Int192,
    SchemaType::Int200,
    SchemaType::Int208,
    SchemaType::Int216,
    SchemaType::Int224,
    SchemaType::Int232,
    SchemaType::Int240,
    SchemaType::Int248,
    SchemaType::Int256,
    SchemaType::Bytes1,
    SchemaType::Bytes2,
    SchemaType::Bytes3,
    SchemaType::Bytes4,
    SchemaType::Bytes5,
    SchemaType::Bytes6,
    SchemaType::Bytes7,
    SchemaType::Bytes8,
    SchemaType::Bytes9,
    SchemaType::Bytes10,
    SchemaType::Bytes11,
    SchemaType::Bytes12,
    SchemaType::Bytes13,
    SchemaType::Bytes14,
    SchemaType::Bytes15,
    SchemaType::Bytes16,
    SchemaType::Bytes17,
    SchemaType::Bytes18,
    SchemaType::Bytes19,
    SchemaType::Bytes20,
    SchemaType::Bytes21,
    SchemaType::Bytes22,
    SchemaType::Bytes23,
    SchemaType::Bytes24,
    SchemaType::Bytes25,
    SchemaType::Bytes26,
    SchemaType::Bytes27,
    SchemaType::Bytes28,
    SchemaType::Bytes29,
    SchemaType::Bytes30,
    SchemaType::Bytes31,
    SchemaType::Bytes32,
    SchemaType::Bool,
    SchemaType::Address,
];

const DYNAMIC_ABI_TYPES: &[SchemaType] = &[
    SchemaType::Uint8Array,
    SchemaType::Uint16Array,
    SchemaType::Uint24Array,
    SchemaType::Uint32Array,
    SchemaType::Uint40Array,
    SchemaType::Uint48Array,
    SchemaType::Uint56Array,
    SchemaType::Uint64Array,
    SchemaType::Uint72Array,
    SchemaType::Uint80Array,
    SchemaType::Uint88Array,
    SchemaType::Uint96Array,
    SchemaType::Uint104Array,
    SchemaType::Uint112Array,
    SchemaType::Uint120Array,
    SchemaType::Uint128Array,
    SchemaType::Uint136Array,
    SchemaType::Uint144Array,
    SchemaType::Uint152Array,
    SchemaType::Uint160Array,
    SchemaType::Uint168Array,
    SchemaType::Uint176Array,
    SchemaType::Uint184Array,
    SchemaType::Uint192Array,
    SchemaType::Uint200Array,
    SchemaType::Uint208Array,
    SchemaType::Uint216Array,
    SchemaType::Uint224Array,
    SchemaType::Uint232Array,
    SchemaType::Uint240Array,
    SchemaType::Uint248Array,
    SchemaType::Uint256Array,
    SchemaType::Int8Array,
    SchemaType::Int16Array,
    SchemaType::Int24Array,
    SchemaType::Int32Array,
    SchemaType::Int40Array,
    SchemaType::Int48Array,
    SchemaType::Int56Array,
    SchemaType::Int64Array,
    SchemaType::Int72Array,
    SchemaType::Int80Array,
    SchemaType::Int88Array,
    SchemaType::Int96Array,
    SchemaType::Int104Array,
    SchemaType::Int112Array,
    SchemaType::Int120Array,
    SchemaType::Int128Array,
    SchemaType::Int136Array,
    SchemaType::Int144Array,
    SchemaType::Int152Array,
    SchemaType::Int160Array,
    SchemaType::Int168Array,
    SchemaType::Int176Array,
    SchemaType::Int184Array,
    SchemaType::Int192Array,
    SchemaType::Int200Array,
    SchemaType::Int208Array,
    SchemaType::Int216Array,
    SchemaType::Int224Array,
    SchemaType::Int232Array,
    SchemaType::Int240Array,
    SchemaType::Int248Array,
    SchemaType::Int256Array,
    SchemaType::Bytes1Array,
    SchemaType::Bytes2Array,
    SchemaType::Bytes3Array,
    SchemaType::Bytes4Array,
    SchemaType::Bytes5Array,
    SchemaType::Bytes6Array,
    SchemaType::Bytes7Array,
    SchemaType::Bytes8Array,
    SchemaType::Bytes9Array,
    SchemaType::Bytes10Array,
    SchemaType::Bytes11Array,
    SchemaType::Bytes12Array,
    SchemaType::Bytes13Array,
    SchemaType::Bytes14Array,
    SchemaType::Bytes15Array,
    SchemaType::Bytes16Array,
    SchemaType::Bytes17Array,
    SchemaType::Bytes18Array,
    SchemaType::Bytes19Array,
    SchemaType::Bytes20Array,
    SchemaType::Bytes21Array,
    SchemaType::Bytes22Array,
    SchemaType::Bytes23Array,
    SchemaType::Bytes24Array,
    SchemaType::Bytes25Array,
    SchemaType::Bytes26Array,
    SchemaType::Bytes27Array,
    SchemaType::Bytes28Array,
    SchemaType::Bytes29Array,
    SchemaType::Bytes30Array,
    SchemaType::Bytes31Array,
    SchemaType::Bytes32Array,
    SchemaType::BoolArray,
    SchemaType::AddressArray,
    SchemaType::Bytes,
    SchemaType::String,
];

pub type SchemaAbiType = SchemaType;

pub fn is_schema_abi_type(abi_type: &str) -> bool {
    STATIC_ABI_TYPES
        .iter()
        .chain(DYNAMIC_ABI_TYPES)
        .any(|&t| t.to_string() == abi_type)
}

// Additional logic and tests
// ...
